
#begin##########Mon, 21 Oct 2013 00:07:09 +0300###########
JavaScript doesn't have a "binary" type and so they went with a String with the guarantee that no character stored in the String would be outside the range 0..255. (They could have gone with an array of Numbers instead, but they didn't; perhaps large Strings are more memory-efficient than large arrays of Numbers, since Numbers are floating-point.)

If you're reading a file that's mostly text in a western script (mostly English, for instance), then that string is going to look a lot like text. If you read a file with Unicode characters in it, you should notice a difference, since JavaScript strings are UTF-16 and so some characters will have values above 255, whereas a "binary string" according to the File API spec wouldn't have any values above 255 (you'd have two individual "characters" for the two bytes of the Unicode code point).

If you're reading a file that's not text at all (an image, perhaps), you'll probably still get a very similar result between readAsText and readAsBinaryString, but with readAsBinaryString you know that there won't be any attempt to interpret multi-byte sequences as characters. You don't know that if you use readAsText, because readAsText will use an encoding determination to try to figure out what the file's encoding is and then map it to JavaScript's UTF-16 strings.

You can see the effect if you create a file and store it in something other than ASCII or UTF-8. (In Windows you can do this via Notepad; the "Save As" as an encoding drop-down with "Unicode" on it, by which looking at the data they seem to mean UTF-16; I'm sure Mac OS and *nix editors have a similar feature.) Here's a page that dumps the result of reading a file both ways:
#end##########Mon, 21 Oct 2013 00:07:09 +0300###########

#begin##########Mon, 21 Oct 2013 00:13:17 +0300###########
dfhgfghg
#end##########Mon, 21 Oct 2013 00:13:17 +0300###########

#begin##########Mon, 21 Oct 2013 00:13:27 +0300###########
dfhgfghg
#end##########Mon, 21 Oct 2013 00:13:27 +0300###########

#begin##########Mon, 21 Oct 2013 00:14:39 +0300###########
fgughkbkbjh
#end##########Mon, 21 Oct 2013 00:14:39 +0300###########

#begin##########Mon, 21 Oct 2013 00:16:05 +0300###########
drydhdgdchfch
#end##########Mon, 21 Oct 2013 00:16:05 +0300###########

#begin##########Thu, 24 Oct 2013 01:00:00 +0300###########
nothing....
#end##########Thu, 24 Oct 2013 01:00:00 +0300###########

#begin##########Thu, 24 Oct 2013 01:00:32 +0300###########
i'm crying
#end##########Thu, 24 Oct 2013 01:00:32 +0300###########

#begin##########Sat, 26 Oct 2013 00:11:19 +0300##[192.168.4.2]##
testing ip
#end##########Sat, 26 Oct 2013 00:11:19 +0300###########

#begin##########Sat, 26 Oct 2013 00:11:51 +0300##[192.168.4.2]##
testing ip
#end##########Sat, 26 Oct 2013 00:11:51 +0300###########

#begin##########Sat, 26 Oct 2013 00:28:57 +0300##[192.168.4.2]##
fuf
#end##########Sat, 26 Oct 2013 00:28:57 +0300###########

#begin##########Sat, 26 Oct 2013 00:31:07 +0300##[192.168.4.2]##
hgfmjvnhfjm
#end##########Sat, 26 Oct 2013 00:31:07 +0300###########
